/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Patrick O Grady
 */
public class Stack extends javax.swing.JFrame {
    
private LinkedQueue myQueue;

    public Stack() {
        
        myQueue = new LinkedQueue();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        enterButton = new javax.swing.JButton();
        enterTextField = new javax.swing.JTextField();
        removeTextField = new javax.swing.JTextField();
        removeButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        printQ = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        exitButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        enterButton.setText("Enter");
        enterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterButtonActionPerformed(evt);
            }
        });

        enterTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterTextFieldActionPerformed(evt);
            }
        });

        removeTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeTextFieldActionPerformed(evt);
            }
        });

        removeButton.setText("Remove ");
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });

        printQ.setColumns(20);
        printQ.setRows(5);
        jScrollPane1.setViewportView(printQ);

        jButton1.setText("Print Queue");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        exitButton.setText("Exit");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(exitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(enterTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(105, 105, 105)
                        .addComponent(enterButton, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(removeButton)))
                .addGap(136, 136, 136))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(removeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 669, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(300, 300, 300)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(48, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(exitButton)
                        .addGap(29, 29, 29)
                        .addComponent(enterTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)
                        .addComponent(enterButton))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(removeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(removeButton)))
                .addGap(52, 52, 52)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void enterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterButtonActionPerformed
        System.out.println(enterTextField.getText());
        
        myQueue.append(enterTextField.getText());
    }//GEN-LAST:event_enterButtonActionPerformed

    private void removeTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeTextFieldActionPerformed
      
    }//GEN-LAST:event_removeTextFieldActionPerformed

    private void enterTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_enterTextFieldActionPerformed

    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed

         removeTextField.setText(myQueue.serve() + " removed from queue");
      
    }//GEN-LAST:event_removeButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        printQ.setText(myQueue.printQ());
    }//GEN-LAST:event_jButton1ActionPerformed

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
       // LinkedQueue myQueue = new LinkedQueue();
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Stack.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Stack.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Stack.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Stack.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Stack().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton enterButton;
    private javax.swing.JTextField enterTextField;
    private javax.swing.JButton exitButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea printQ;
    private javax.swing.JButton removeButton;
    private javax.swing.JTextField removeTextField;
    // End of variables declaration//GEN-END:variables
public class Node {
	// Instance Variables
	private Object element;
	private Node next;

	// Constructors
	public Node(Object e, Node n)
	{
		element = e;
		next = n;
	}

        private Node() {
         //   throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }

// Accessor methods
	public Object getElement()
	{	return element;	}
	
	public Node getNext()
	{	return next;	}
	
	// Modifier methods
	public void setElement(Object newElem)
	{
		element = newElem;
	}

	public void setNext(Node newNext)
	{
		next = newNext;
	}
    } // end of class Node
    public class LinkedQueue {
	private Node head, tail;
	private int qSize;

	// constructor
	public LinkedQueue( )
	{
		head = tail = null;
		qSize = 0;
                
	}

        public String printQ(){
            Node obj = head;
            String list = "";
                    
            for (int i = 0; i < size(); i++) {
               list += obj.getElement() + " , ";
                obj = obj.getNext();
                
            }
            return list;
        }
	// accessor methods
    	public int size( ) 
	{
		return qSize;
	}    	
public Node getTail( ) 
	{
		return tail;
	}

	public boolean isEmpty( )
	{
		return (qSize == 0);
	}
public Object front( )     		
	{
		if (isEmpty())
			System.out.println("Queue is Empty");
		else
			return head.getElement();
            return null;
	}
// update methods
  	public void append (Object obj) // insert an element 
	{
		Node node = new Node( );
		node.setElement(obj);
		node.setNext(null);     	// node will be new tail node
		if (qSize == 0)
			head = node;      	// special case of  a previously 					// empty queue
		else
			tail.setNext(node); // add node at the tail of the list
		
		tail = node;    // update the reference to the tail node
		qSize++;
                
                System.out.println(size());
                
	}

        public Object serve( ) 
	// Remove the first object from the queue
	{
		Object obj = null;
		if (qSize == 0)
		 System.out.println("Queue is empty.");
		else {
			obj = head.getElement();
                        
                        
			head = head.getNext();
			qSize--;
		}
		if (qSize == 0)
			tail = null; // the queue is now 				   // empty
		return obj;	
	  }
} // end of class LinkedQueue

}
